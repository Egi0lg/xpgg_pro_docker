user  www www;
worker_processes  auto;
error_log  /data/logs/nginx/error.log  notice; #错误日志默认crit太低不好判断错误，调整到error或者更高的notice排错方便
pid  /var/run/nginx.pid;
worker_rlimit_nofile  65535;
#worker_cpu_affinity  000001 000010 000100 001000 010000 100000;
events {
       use  epoll;
       worker_connections  65535;
}

http {
     include  mime.types;
     default_type  application/octet-stream;

     log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '"$status" $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '"$gzip_ratio" $request_time $bytes_sent $request_length "$upstream_addr"';
     
     #access_log /data/logs/access.log main;
     #全局不需要开正常日志，可以在站点下开
     access_log off;
     server_name_in_redirect off;
     sendfile on;
     tcp_nopush     on;
     server_tokens off;
     reset_timedout_connection on;           
     send_timeout           3m;           #默认60，建立连接三次握手的超时时间，超过就断开
     keepalive_timeout 75;                #默认就是75s，建立连接以后，75s秒没有信息交互就断开连接
     client_header_timeout  3m;           #建立连接后客户端请求头发送超时时间，默认60
     client_body_timeout    3m;           #建立链接后客户端请求体发送超时时间，有涉及上传文件单独location设置大值
     client_header_buffer_size 4k;        #默认1k，由于系统默认分页大小一般4k，设置4k也不会多浪费一个分页
     client_body_buffer_size  16k;        #默认2个系统分页大小，body一般可能会大，设置16K刚好，超过会写临时文件
     large_client_header_buffers  4 16k;  #默认4 8当请求头大于client_header_buffer_size值调用这个 
     client_max_body_size  300m;            #客户端上传文件大小,这里调大点，django那边有再做限制了
     proxy_connect_timeout 60;  #和upstream server建立连接时间默认60，别超过keepalive_timeout，不然前面先断了呵呵
     proxy_send_timeout 120;    #send和下面的read看优化文档
     proxy_read_timeout 120;  
     fastcgi_connect_timeout 300;
     fastcgi_send_timeout 300;
     fastcgi_read_timeout 300;
     fastcgi_buffer_size 16k;
     fastcgi_buffers 16 16k;
     fastcgi_busy_buffers_size 16k;
     fastcgi_temp_file_write_size 16k;
       
#压缩加速优化
     gzip  on;
     gzip_min_length  1024;
     gzip_comp_level  3;
     gzip_buffers     4 8k;
     gzip_vary on;
     gzip_http_version 1.0;  #CDN抓取目前只支持http1.0,nginx默认是1.1所以没办法最好改成1.0
     gzip_disable     "MSIE [1-6] \.";
     gzip_types text/plain text/css application/json application/x-javascript text/xml application/xmapplication/xml+rss text/javascript application/vnd.syncml+xml;

# 
     server { 
             listen 80;
             server_name localhost;
             root /data/www/xpgg;
             index index.php index.html;
             access_log /data/logs/nginx/xpgg.log main;
             # 小胖哥哥网站
             location / {
                  try_files $uri $uri/ /index.html;
             }

             # 前端的axios调用drf的时候vue里设置了VUE_APP_BASE_API = '/xpgg-api'
             # 于是axios请求url前面就是/xpgg-api/xxx/xxx，接着就被这里匹配代理到下面drf的代理去了  
             location /xpgg-api/ {
                  proxy_pass http://127.0.0.1:8000/;
                  proxy_redirect off;
                  proxy_set_header Host $host:$server_port;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             }
     }

# django代理
     server {
            listen 8000;
            server_name localhost;
            access_log /data/logs/nginx/django.log main;
            location / {
                  proxy_pass http://127.0.0.1:8005;
                  proxy_redirect off;
                  # 下面要加上端口$server_port不然反代时候少了端口发现，drf的api列表都是错的因为没端口
                  proxy_set_header Host $host:$server_port;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
            location /static/ {
  	          alias /data/www/xpgg_pro/collected_static/;
            }
     }
	

      include  vhosts/*.conf;
}



